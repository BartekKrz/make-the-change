-- =====================================================
-- V√âRIFICATION RAPIDE FIXES S√âCURIT√â
-- =====================================================
-- Script de validation apr√®s ex√©cution des fixes
--
-- √Ä EX√âCUTER DANS SUPABASE SQL EDITOR
-- =====================================================

-- =====================================================
-- V√âRIFICATION 1: VUES DANGEREUSES SUPPRIM√âES
-- =====================================================

SELECT
    'üîç V√âRIFICATION VUES DANGEREUSES:' as section,
    CASE WHEN NOT EXISTS (
        SELECT 1 FROM information_schema.views
        WHERE table_schema = 'public'
        AND table_name IN (
            'dual_billing_dashboard',
            'index_usage_analysis',
            'table_size_analysis',
            'points_expiring_soon',
            'user_subscription_summary',
            'admin_dashboard_metrics',
            'points_expiry_with_days'
        )
    ) THEN '‚úÖ TOUTES SUPPRIM√âES'
    ELSE '‚ùå ENCORE PR√âSENTES - V√âRIFIER'
    END as status_vues_dangereuses;

-- Lister les vues dangereuses restantes (si elles existent)
SELECT
    'üìã VUES DANGEREUSES RESTANTES:' as alert,
    table_name as vue_dangereuse,
    '√Ä SUPPRIMER MANUELLEMENT' as action
FROM information_schema.views
WHERE table_schema = 'public'
AND table_name IN (
    'dual_billing_dashboard',
    'index_usage_analysis',
    'table_size_analysis',
    'points_expiring_soon',
    'user_subscription_summary',
    'admin_dashboard_metrics',
    'points_expiry_with_days'
);

-- =====================================================
-- V√âRIFICATION 2: VUES S√âCURIS√âES CR√â√âES
-- =====================================================

SELECT
    'üîç V√âRIFICATION VUES S√âCURIS√âES:' as section,
    CASE WHEN (
        SELECT COUNT(*) FROM information_schema.views
        WHERE table_schema = 'public'
        AND table_name IN (
            'dual_billing_dashboard_secure',
            'index_usage_analysis_secure',
            'table_size_analysis_secure'
        )
    ) = 3 THEN '‚úÖ TOUTES CR√â√âES'
    ELSE '‚ùå MANQUANTES - V√âRIFIER'
    END as status_vues_secure;

-- Lister les vues s√©curis√©es cr√©√©es
SELECT
    'üìã VUES S√âCURIS√âES DISPONIBLES:' as info,
    table_name as vue_secure,
    'FONCTIONNELLE' as status
FROM information_schema.views
WHERE table_schema = 'public'
AND table_name LIKE '%_secure';

-- =====================================================
-- V√âRIFICATION 3: RLS SUR SPATIAL_REF_SYS
-- =====================================================

SELECT
    'üîç V√âRIFICATION RLS SPATIAL_REF_SYS:' as section,
    CASE WHEN EXISTS (
        SELECT 1 FROM pg_class c
        JOIN pg_namespace n ON c.relnamespace = n.oid
        WHERE n.nspname = 'public'
        AND c.relname = 'spatial_ref_sys'
        AND c.relrowsecurity = true
    ) THEN '‚úÖ RLS ACTIV√â'
    ELSE '‚ùå RLS NON ACTIV√â - √Ä CORRIGER'
    END as status_rls;

-- V√©rifier les politiques RLS sur spatial_ref_sys
SELECT
    'üìã POLITIQUES RLS SPATIAL_REF_SYS:' as info,
    schemaname,
    tablename,
    policyname,
    permissive,
    roles,
    cmd,
    'PROT√âG√â' as status
FROM pg_policies
WHERE schemaname = 'public'
AND tablename = 'spatial_ref_sys';

-- =====================================================
-- V√âRIFICATION 4: FONCTIONS AVEC SEARCH_PATH S√âCURIS√â
-- =====================================================

SELECT
    'üîç V√âRIFICATION SEARCH_PATH FONCTIONS:' as section,
    CASE WHEN (
        SELECT COUNT(*) FROM pg_proc p
        JOIN pg_namespace n ON p.pronamespace = n.oid
        WHERE n.nspname = 'public'
        AND p.proname IN ('calculate_mrr', 'calculate_conversion_rate', 'update_updated_at_column')
        AND p.prosecdef = true
        AND p.proconfig IS NOT NULL
        AND array_to_string(p.proconfig, ',') LIKE '%search_path%'
    ) = 3 THEN '‚úÖ TOUTES S√âCURIS√âES'
    ELSE '‚ùå PROBL√àMES - V√âRIFIER'
    END as status_search_path;

-- D√©tails des fonctions s√©curis√©es
SELECT
    'üìã FONCTIONS AVEC SEARCH_PATH:' as info,
    p.proname as fonction,
    CASE WHEN p.prosecdef THEN '‚úÖ SECURITY DEFINER' ELSE '‚ùå PAS SECURE' END as security_definer,
    CASE WHEN p.proconfig IS NOT NULL AND array_to_string(p.proconfig, ',') LIKE '%search_path%'
         THEN '‚úÖ SEARCH_PATH FIX√â'
         ELSE '‚ùå SEARCH_PATH VARIABLE' END as search_path_status
FROM pg_proc p
JOIN pg_namespace n ON p.pronamespace = n.oid
WHERE n.nspname = 'public'
AND p.proname IN ('calculate_mrr', 'calculate_conversion_rate', 'update_updated_at_column');

-- =====================================================
-- V√âRIFICATION 5: POLITIQUES RLS DES VUES S√âCURIS√âES
-- =====================================================

SELECT
    'üîç V√âRIFICATION POLITIQUES RLS VUES:' as section,
    CASE WHEN (
        SELECT COUNT(*) FROM pg_policies
        WHERE schemaname = 'public'
        AND tablename LIKE '%_secure'
    ) >= 3 THEN '‚úÖ POLITIQUES CR√â√âES'
    ELSE '‚ùå POLITIQUES MANQUANTES'
    END as status_politiques;

-- D√©tails des politiques RLS
SELECT
    'üìã POLITIQUES RLS VUES S√âCURIS√âES:' as info,
    schemaname,
    tablename,
    policyname,
    permissive,
    roles,
    cmd,
    'CONTR√îL√â' as status
FROM pg_policies
WHERE schemaname = 'public'
AND tablename LIKE '%_secure';

-- =====================================================
-- RAPPORT FINAL DE S√âCURIT√â
-- =====================================================

SELECT
    'üéØ RAPPORT FINAL S√âCURIT√â:' as celebration,
    NOW() as verification_date,

    -- Score s√©curit√© calcul√©
    CASE
        WHEN (
            -- Vues dangereuses supprim√©es
            NOT EXISTS (SELECT 1 FROM information_schema.views WHERE table_schema = 'public' AND table_name IN ('dual_billing_dashboard', 'index_usage_analysis', 'table_size_analysis', 'points_expiring_soon', 'user_subscription_summary', 'admin_dashboard_metrics', 'points_expiry_with_days'))
            AND
            -- Vues s√©curis√©es cr√©√©es
            (SELECT COUNT(*) FROM information_schema.views WHERE table_schema = 'public' AND table_name LIKE '%_secure') = 3
            AND
            -- RLS activ√© sur spatial_ref_sys
            EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON c.relnamespace = n.oid WHERE n.nspname = 'public' AND c.relname = 'spatial_ref_sys' AND c.relrowsecurity = true)
            AND
            -- Fonctions s√©curis√©es
            (SELECT COUNT(*) FROM pg_proc p JOIN pg_namespace n ON p.pronamespace = n.oid WHERE n.nspname = 'public' AND p.proname IN ('calculate_mrr', 'calculate_conversion_rate', 'update_updated_at_column') AND p.prosecdef = true AND p.proconfig IS NOT NULL AND array_to_string(p.proconfig, ',') LIKE '%search_path%') = 3
        ) THEN 'üéâ S√âCURIT√â PARFAITE - SCORE 10/10'
        WHEN (
            -- Vues dangereuses supprim√©es
            NOT EXISTS (SELECT 1 FROM information_schema.views WHERE table_schema = 'public' AND table_name IN ('dual_billing_dashboard', 'index_usage_analysis', 'table_size_analysis'))
        ) THEN '‚úÖ BONNE S√âCURIT√â - SCORE 8/10'
        WHEN (
            -- Au moins les vues dangereuses supprim√©es
            (SELECT COUNT(*) FROM information_schema.views WHERE table_schema = 'public' AND table_name IN ('dual_billing_dashboard', 'index_usage_analysis', 'table_size_analysis', 'points_expiring_soon', 'user_subscription_summary', 'admin_dashboard_metrics', 'points_expiry_with_days')) < 7
        ) THEN '‚ö†Ô∏è S√âCURIT√â AM√âLIOR√âE - SCORE 6/10'
        ELSE '‚ùå S√âCURIT√â √Ä AM√âLIORER - SCORE 4/10'
    END as security_score,

    -- R√©sum√© des actions
    CASE WHEN NOT EXISTS (SELECT 1 FROM information_schema.views WHERE table_schema = 'public' AND table_name IN ('dual_billing_dashboard', 'index_usage_analysis', 'table_size_analysis', 'points_expiring_soon', 'user_subscription_summary', 'admin_dashboard_metrics', 'points_expiry_with_days'))
         THEN '‚úÖ 7 vues SECURITY DEFINER supprim√©es'
         ELSE '‚ùå Vues dangereuses encore pr√©sentes'
    END as vues_status,

    CASE WHEN (SELECT COUNT(*) FROM information_schema.views WHERE table_schema = 'public' AND table_name LIKE '%_secure') >= 3
         THEN '‚úÖ 3 vues s√©curis√©es cr√©√©es'
         ELSE '‚ùå Vues s√©curis√©es manquantes'
    END as vues_secure_status,

    CASE WHEN EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON c.relnamespace = n.oid WHERE n.nspname = 'public' AND c.relname = 'spatial_ref_sys' AND c.relrowsecurity = true)
         THEN '‚úÖ RLS activ√© sur spatial_ref_sys'
         ELSE '‚ùå RLS manquant sur spatial_ref_sys'
    END as rls_status,

    CASE WHEN (SELECT COUNT(*) FROM pg_proc p JOIN pg_namespace n ON p.pronamespace = n.oid WHERE n.nspname = 'public' AND p.proname IN ('calculate_mrr', 'calculate_conversion_rate', 'update_updated_at_column') AND p.prosecdef = true AND p.proconfig IS NOT NULL AND array_to_string(p.proconfig, ',') LIKE '%search_path%') >= 3
         THEN '‚úÖ Fonctions avec search_path s√©curis√©'
         ELSE '‚ùå Fonctions √† s√©curiser'
    END as fonctions_status;

-- =====================================================
-- ACTIONS RECOMMAND√âES SI PROBL√àMES
-- =====================================================

SELECT
    'üõ†Ô∏è ACTIONS RECOMMAND√âES:' as recommendations,
    CASE WHEN EXISTS (SELECT 1 FROM information_schema.views WHERE table_schema = 'public' AND table_name IN ('dual_billing_dashboard', 'index_usage_analysis', 'table_size_analysis'))
         THEN '1. Supprimer manuellement les vues restantes'
         ELSE '1. ‚úÖ Vues dangereuses supprim√©es'
    END as action_1,

    CASE WHEN (SELECT COUNT(*) FROM information_schema.views WHERE table_schema = 'public' AND table_name LIKE '%_secure') < 3
         THEN '2. Recr√©er les vues s√©curis√©es manquantes'
         ELSE '2. ‚úÖ Vues s√©curis√©es cr√©√©es'
    END as action_2,

    CASE WHEN NOT EXISTS (SELECT 1 FROM pg_class c JOIN pg_namespace n ON c.relnamespace = n.oid WHERE n.nspname = 'public' AND c.relname = 'spatial_ref_sys' AND c.relrowsecurity = true)
         THEN '3. Activer RLS sur spatial_ref_sys'
         ELSE '3. ‚úÖ RLS activ√©'
    END as action_3,

    CASE WHEN (SELECT COUNT(*) FROM pg_proc p JOIN pg_namespace n ON p.pronamespace = n.oid WHERE n.nspname = 'public' AND p.proname IN ('calculate_mrr', 'calculate_conversion_rate', 'update_updated_at_column') AND p.prosecdef = true AND p.proconfig IS NOT NULL AND array_to_string(p.proconfig, ',') LIKE '%search_path%') < 3
         THEN '4. Corriger search_path des fonctions'
         ELSE '4. ‚úÖ Fonctions s√©curis√©es'
    END as action_4,

    '5. Proc√©der √† la Phase 2 (Performance)' as next_phase;
