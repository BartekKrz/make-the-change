#!/bin/bash

# =====================================================
# SCRIPT DE MIGRATION AUTOMATIS√â
# Make the Change - Syst√®me Dual Billing
# =====================================================

echo "==============================================="
echo "MIGRATION DUAL BILLING - MAKE THE CHANGE"
echo "==============================================="
echo "D√©but: $(date)"
echo ""

# V√©rifier si supabase CLI est install√©
if ! command -v supabase &> /dev/null; then
    echo "‚ùå Supabase CLI n'est pas install√©."
    echo "Installation: npm install supabase --save-dev"
    exit 1
fi

# V√©rifier si on est dans un projet supabase
if [ ! -f "supabase/config.toml" ]; then
    echo "‚ùå Pas dans un projet Supabase (config.toml manquant)"
    echo "Allez dans le r√©pertoire racine du projet"
    exit 1
fi

echo "‚úÖ Supabase CLI d√©tect√©"
echo "‚úÖ Projet Supabase d√©tect√©"
echo ""

# Fonction pour ex√©cuter un fichier SQL
execute_sql() {
    local file="$1"
    local description="$2"

    echo "üìÑ Ex√©cution: $description"
    echo "Fichier: $file"

    if supabase db push --file "$file"; then
        echo "‚úÖ $description - SUCC√àS"
    else
        echo "‚ùå $description - √âCHEC"
        echo "V√©rifiez les erreurs ci-dessus"
        read -p "Continuer malgr√© l'erreur? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 1
        fi
    fi
    echo ""
}

# =====================================================
# EX√âCUTION DES √âTAPES
# =====================================================

echo "üöÄ D√âBUT DE LA MIGRATION"
echo "=========================="

# √âtape 1: Types ENUM
execute_sql "step1_types.sql" "Cr√©ation des types ENUM"

# √âtape 2: Extension des tables existantes
execute_sql "step2_extend_tables.sql" "Extension des tables existantes"

# √âtape 3: Nouvelles tables
execute_sql "step3_new_tables.sql" "Cr√©ation des nouvelles tables"

# √âtape 4: Index de performance
execute_sql "step4_indexes.sql" "Cr√©ation des index"

# √âtape 5: Fonctions
execute_sql "step5_remaining.sql" "Cr√©ation des fonctions"

# √âtape 6: Triggers
execute_sql "step5_remaining.sql" "Configuration des triggers"

# √âtape 7: Politiques RLS
execute_sql "step5_remaining.sql" "Configuration des politiques RLS"

# √âtape 8: Donn√©es de test
execute_sql "step5_remaining.sql" "Insertion des donn√©es de test"

# √âtape 9: Vues
execute_sql "step5_remaining.sql" "Cr√©ation des vues"

echo "==============================================="
echo "MIGRATION TERMIN√âE"
echo "==============================================="
echo "Fin: $(date)"
echo ""
echo "üìã R√âSUM√â:"
echo "- Types ENUM cr√©√©s"
echo "- Tables √©tendues (subscriptions, monthly_allocations)"
echo "- Nouvelles tables cr√©√©es (billing_history, conversion_events, etc.)"
echo "- Index de performance ajout√©s"
echo "- Fonctions utilitaires cr√©√©es"
echo "- Triggers automatiques configur√©s"
echo "- Politiques RLS d√©finies"
echo "- Donn√©es de test ins√©r√©es"
echo "- Vues analytiques cr√©√©es"
echo ""
echo "üéâ Migration termin√©e avec succ√®s!"
echo "==============================================="
