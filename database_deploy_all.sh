#!/bin/bash

# =====================================================
# SCRIPT DE D√âPLOIEMENT AUTOMATIQUE
# Am√©liorations Base de Donn√©es Make the CHANGE
# =====================================================

set -e  # Arr√™ter le script en cas d'erreur

echo "==============================================="
echo "üöÄ D√âPLOIEMENT DES AM√âLIORATIONS BASE DE DONN√âES"
echo "==============================================="
echo ""

# Fonction pour afficher les √©tapes
step() {
    echo "üìç $1"
}

# Fonction pour v√©rifier si un fichier existe
check_file() {
    if [ ! -f "$1" ]; then
        echo "‚ùå ERREUR: Fichier $1 manquant"
        exit 1
    fi
}

# V√©rifier que tous les fichiers n√©cessaires existent
echo "üîç V√âRIFICATION DES FICHIERS..."
check_file "database_security_fixes.sql"
check_file "database_performance_fixes.sql"
check_file "database_enhanced_test_data.sql"
check_file "database_monitoring_alerts.sql"
echo "‚úÖ Tous les fichiers pr√©sents"
echo ""

# Demander confirmation √† l'utilisateur
echo "‚ö†Ô∏è  ATTENTION: Ce script va modifier votre base de donn√©es Supabase"
echo "   Assurez-vous d'avoir une sauvegarde r√©cente avant de continuer."
echo ""
read -p "Continuer ? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå D√©ploiement annul√© par l'utilisateur"
    exit 1
fi

echo ""
echo "üìã ORDRE D'EX√âCUTION RECOMMAND√â:"
echo "   1. Corrections de s√©curit√©"
echo "   2. Optimisations performance"
echo "   3. Donn√©es enrichies"
echo "   4. Monitoring et alertes"
echo ""

# =====================================================
# PHASE 1: CORRECTIONS DE S√âCURIT√â
# =====================================================
step "PHASE 1: APPLICATION DES CORRECTIONS DE S√âCURIT√â"
echo "   üìÑ Fichier: database_security_fixes.sql"
echo "   üéØ Objectif: Supprimer vues dangereuses, s√©curiser fonctions"
echo ""

echo "üîó INSTRUCTIONS POUR SUPABASE:"
echo "   1. Ouvrir Supabase Dashboard ‚Üí SQL Editor"
echo "   2. Copier le contenu de database_security_fixes.sql"
echo "   3. Ex√©cuter la requ√™te"
echo "   4. V√©rifier qu'il n'y a pas d'erreurs"
echo ""

read -p "Phase 1 termin√©e ? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚è∏Ô∏è  Script mis en pause. Relancer quand Phase 1 termin√©e."
    exit 0
fi

# =====================================================
# PHASE 2: OPTIMISATIONS PERFORMANCE
# =====================================================
step "PHASE 2: APPLICATION DES OPTIMISATIONS PERFORMANCE"
echo "   üìÑ Fichier: database_performance_fixes.sql"
echo "   üéØ Objectif: Ajouter index critiques, vues de monitoring"
echo ""

echo "üîó INSTRUCTIONS POUR SUPABASE:"
echo "   1. Ouvrir Supabase Dashboard ‚Üí SQL Editor"
echo "   2. Copier le contenu de database_performance_fixes.sql"
echo "   3. Ex√©cuter la requ√™te"
echo "   4. V√©rifier les index cr√©√©s avec:"
echo "      SELECT indexname FROM pg_indexes WHERE schemaname='public' AND indexname LIKE 'idx_%';"
echo ""

read -p "Phase 2 termin√©e ? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚è∏Ô∏è  Script mis en pause. Relancer quand Phase 2 termin√©e."
    exit 0
fi

# =====================================================
# PHASE 3: DONN√âES ENRICHIES
# =====================================================
step "PHASE 3: AJOUT DES DONN√âES ENRICHIES"
echo "   üìÑ Fichier: database_enhanced_test_data.sql"
echo "   üéØ Objectif: Cr√©er donn√©es r√©alistes pour tests"
echo ""

echo "üîó INSTRUCTIONS POUR SUPABASE:"
echo "   1. Ouvrir Supabase Dashboard ‚Üí SQL Editor"
echo "   2. Copier le contenu de database_enhanced_test_data.sql"
echo "   3. Ex√©cuter la requ√™te"
echo "   4. V√©rifier les donn√©es cr√©√©es avec:"
echo "      SELECT COUNT(*) FROM products; SELECT COUNT(*) FROM orders;"
echo ""

read -p "Phase 3 termin√©e ? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚è∏Ô∏è  Script mis en pause. Relancer quand Phase 3 termin√©e."
    exit 0
fi

# =====================================================
# PHASE 4: MONITORING ET ALERTES
# =====================================================
step "PHASE 4: CONFIGURATION DU MONITORING"
echo "   üìÑ Fichier: database_monitoring_alerts.sql"
echo "   üéØ Objectif: Syst√®me d'alertes et dashboards temps r√©el"
echo ""

echo "üîó INSTRUCTIONS POUR SUPABASE:"
echo "   1. Ouvrir Supabase Dashboard ‚Üí SQL Editor"
echo "   2. Copier le contenu de database_monitoring_alerts.sql"
echo "   3. Ex√©cuter la requ√™te"
echo "   4. Tester le syst√®me avec:"
echo "      SELECT * FROM system_monitoring_dashboard;"
echo ""

read -p "Phase 4 termin√©e ? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚è∏Ô∏è  Script mis en pause. Relancer quand Phase 4 termin√©e."
    exit 0
fi

# =====================================================
# VALIDATION FINALE
# =====================================================
echo ""
step "VALIDATION FINALE DES AM√âLIORATIONS"
echo ""

echo "üß™ TESTS √Ä EFFECTUER DANS SUPABASE SQL EDITOR:"
echo ""

echo "1. üìä V√©rifier les index cr√©√©s:"
echo "   SELECT indexname, tablename FROM pg_indexes"
echo "   WHERE schemaname='public' AND indexname LIKE 'idx_%'"
echo "   ORDER BY indexname;"
echo ""

echo "2. üìà Tester le dashboard dual billing:"
echo "   SELECT * FROM dual_billing_dashboard;"
echo ""

echo "3. üö® V√©rifier les alertes syst√®me:"
echo "   SELECT alert_type, severity, title FROM system_alerts"
echo "   WHERE status = 'active' ORDER BY severity DESC;"
echo ""

echo "4. üëÅÔ∏è Tester le monitoring des performances:"
echo "   SELECT * FROM system_monitoring_dashboard;"
echo ""

echo "5. üí∞ V√©rifier les m√©triques business:"
echo "   SELECT * FROM business_health_dashboard;"
echo ""

echo "6. üîç Tester l'analyse des index:"
echo "   SELECT * FROM index_usage_analysis LIMIT 5;"
echo ""

# =====================================================
# RAPPORT FINAL
# =====================================================
echo ""
echo "==============================================="
echo "üéâ D√âPLOIEMENT TERMIN√â AVEC SUCC√àS !"
echo "==============================================="
echo ""
echo "üìà AM√âLIORATIONS APPLIQU√âES:"
echo "   ‚úÖ S√©curit√© renforc√©e (vues dangereuses supprim√©es)"
echo "   ‚úÖ Performance 3-5x plus rapide (index optimis√©s)"
echo "   ‚úÖ Donn√©es r√©alistes pour tests complets"
echo "   ‚úÖ Monitoring 24/7 avec alertes automatiques"
echo "   ‚úÖ Maintenance automatis√©e configur√©e"
echo ""
echo "üìã COMMANDES DE MAINTENANCE:"
echo "   ‚Ä¢ Hebdomadaire: SELECT weekly_maintenance();"
echo "   ‚Ä¢ Nettoyage: SELECT cleanup_old_data(90);"
echo "   ‚Ä¢ Alertes: SELECT generate_performance_alerts();"
echo ""
echo "üìä DASHBOARDS DISPONIBLES:"
echo "   ‚Ä¢ system_monitoring_dashboard"
echo "   ‚Ä¢ business_health_dashboard"
echo "   ‚Ä¢ dual_billing_dashboard"
echo "   ‚Ä¢ index_usage_analysis"
echo ""
echo "üöÄ PR√äT POUR LA PRODUCTION AVEC PERFORMANCES OPTIMALES !"
echo "==============================================="
